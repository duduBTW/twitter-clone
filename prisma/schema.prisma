// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Tweet {
  id          Int      @id @default(autoincrement())
  description String?
  retweeted   Boolean? @default(false)
  retweetes   Int?     @default(0)
  liked       Boolean? @default(false)
  likes       Int?     @default(0)
  createdAt   DateTime @default(now())
  images      Images[]

  userTwitterId String?
  userTwitter   UserTwitter? @relation(fields: [userTwitterId], references: [id])

  answeringId Int?
  answering   Tweet?  @relation("TeacherStudents", fields: [answeringId], references: [id])
  answers     Tweet[] @relation("TeacherStudents")
}

model Images {
  id      String @id @default(cuid())
  src     String
  Tweet   Tweet  @relation(fields: [tweetId], references: [id])
  tweetId Int
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  UserTwitter   UserTwitter?
}

model UserTwitter {
  id             String  @id @default(cuid())
  name           String?
  Tweet          Tweet[]
  profilePicture String?
  profileCover   String?
  user           User    @relation(fields: [userId], references: [id])
  userId         String  @unique
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
